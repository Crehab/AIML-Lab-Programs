#include <stdio.h>

void prims (int cost[][10], int n, int p[])
{
	int i, d[10], s[10], min, j, u, v;
	for(i = 0; i < n; i++)
	{
		s[i] = 0;
		d[i] = 999;
	}
	d[0] = 0;
	for(i = 0; i < n; i++)
	{
		min = 999;
		for(j = 0; j < n; j++)
		{
			if(s[j] == 0 && d[j] < min)
			{
				min = d[j];
				u = j;
			}
		}
		s[u] = 1;
		for(v = 0; v < n; v++)
		{
			if(s[v] == 0 && cost[u][v] < d[v])
			{
				d[v] = cost[u][v];
				p[v] = u;
 			}	
			
		}	
	}
}

void print_min_spanning_tree(int cost[][10], int n, int p[])
{
	int i, sum = 0;
	for(i = 0; i < n; i++) sum += cost [i][p [i] ];
		if(sum >= 999)
			printf("Spanning Tree Does not Exist: ");
		else
		{
			printf("Edge Weight\n");
			for(i = 0; i < n; i++)
				printf("%d->%d = %d\n", i, p[i], cost[i][p [i]]);
			printf("Cost   = %d\n", sum);
		} 
	 
}

void main ()
{
	int n, i, j, cost[10][10], p [10];
	printf("Enter the Number of Vertices: ");
	scanf("%d", &n);
	printf("Enter cost adjacency matrix: ");
	for(i = 0; i < n; i++)
		for(j = 0; j < n; j++)
			scanf("%d", &cost[i][j]);
			
	prims(cost, n, p);
	print_min_spanning_tree(cost, n, p);
			

}
